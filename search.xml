<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机网络(一)：计算机网络概述</title>
      <link href="/2020/01/21/network-1/"/>
      <url>/2020/01/21/network-1/</url>
      
        <content type="html"><![CDATA[<h2 id="计算机网络在信息时代中的作用"><a class="markdownIt-Anchor" href="#计算机网络在信息时代中的作用"></a> 计算机网络在信息时代中的作用</h2><p>21世纪的重要特征就是数字化、网络化和信息化，它是一个以网络为核心的信息时代。</p><p>网络是指”三网“，即电信网络、有线电视网络和计算机网络。</p><p>计算机网络向用户提供的最重要的功能：</p><ul><li><strong>连通性</strong>：计算机网络使上网用户之间都可以交换信息，好像这些用户的计算机都可以彼此直接连通一样。</li><li><strong>共享性</strong>：即资源共享。可以是信息共享、软件共享，也可以是硬件共享。</li></ul><h2 id="因特网概述"><a class="markdownIt-Anchor" href="#因特网概述"></a> 因特网概述</h2><p>首先区分三个概念：</p><ul><li><strong>网络</strong>(network)：许多计算机连接在一起；</li><li><strong>互联网</strong>(internet)：许多网络连接在一起；</li><li><strong>因特网</strong>(Internet)：全球最大的一个互联网；</li></ul><p><a href="/pic/network/1-1.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/pic/network/1-1.png" class="lazyload"></a></p><p>因特网发展的三个阶段：</p><p>第一阶段是从单个网络 ARPANET 向互联网发展的过程。1983 年 TCP/IP 协议成为 ARPANET 上的标准协议，人们把 1983 年作为因特网的诞生时间。</p><p>第二阶段的特点是建成了三级结构的因特网。三级计算机网络分为主干网、地区网和校园网（或企业网）。</p><p>第三阶段的特点是逐渐形成了多层次 ISP 结构的因特网。出现了因特网服务提供者 ISP (Internet Service Provider)。 根据提供服务的覆盖面积大小以及所拥有的 IP 地址数目的不同，ISP 也分成为不同的层次。</p><p><a href="/pic/network/1-2.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/pic/network/1-2.png" class="lazyload"></a></p><p>制订因特网的正式标准的四个阶段：</p><ol><li>因特网草案(Internet Draft) ——在这个阶段还不是 RFC 文档。</li><li>建议标准(Proposed Standard) ——从这个阶段开始就成为 RFC 文档。</li><li>草案标准(Draft Standard)</li><li>因特网标准(Internet Standard)</li></ol><p><a href="/pic/network/1-3.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/pic/network/1-3.png" class="lazyload"></a></p><h2 id="因特网的组成"><a class="markdownIt-Anchor" href="#因特网的组成"></a> 因特网的组成</h2><p>从因特网的工作方式上看，可以划分两部分：</p><ul><li><strong>边缘部分</strong>：由所有连接在因特网上的主机组成。这部分是用户直接使用的，用来进行通信（传送数据、音频或视频）和资源共享。</li><li><strong>核心部分</strong>：由大量网络和连接这些网络的路由器组成。这部分是为边缘部分提供服务的（提供连通性和交换）。</li></ul><p><a href="/pic/network/1-4.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/pic/network/1-4.png" class="lazyload"></a></p><h3 id="1-因特网的边缘部分"><a class="markdownIt-Anchor" href="#1-因特网的边缘部分"></a> 1 因特网的边缘部分</h3><p>处在因特网边缘的部分就是连接在因特网上的所有的主机，这些主机又称为端系统(end system)。</p><p>在网络边缘的端系统中运行的程序之间的通信方式通常可划分为两大类：</p><ul><li><strong>客户服务器方式</strong>（C/S 方式），即Client/Server方式</li><li><strong>对等方式</strong>（P2P 方式），即 Peer-to-Peer方式</li></ul><p><a href="/pic/network/1-5.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/pic/network/1-5.png" class="lazyload"></a></p><p><strong>客户服务器方式</strong></p><p>客户(client)和服务器(server)都是指通信中所涉及的两个应用进程。客户服务器方式所描述的是进程之间服务和被服务的关系。客户是服务的请求方，服务器是服务的提供方。</p><p><strong>客户软件</strong>的特点：被用户调用后运行，在打算通信时主动向远地服务器发起通信（请求服务），因此客户程序必须知道服务器程序的地址；不需要特殊的硬件和很复杂的操作系统。</p><p><strong>服务器软件</strong>的特点：一种专门用来提供某种服务的程序，可同时处理多个远地或本地客户的请求；系统启动后即自动调用并一直不断地运行着，被动地等待并接受来自各地的客户的通信请求，因此服务器程序不需要知道客户程序的地址；一般需要强大的硬件和高级的操作系统支持。</p><p><strong>对等连接方式</strong></p><p>对等连接(peer-to-peer，简写为P2P)是指两个主机在通信时并不区分哪一个是服务请求方还是服务提供方。只要两个主机都运行了对等连接软件（P2P 软件），它们就可以进行平等的、对等连接通信。双方都可以下载对方已经存储在硬盘中的共享文档。</p><p><strong>对等连接方式的特点</strong>：对等连接方式从本质上看仍然是使用客户服务器方式，只是对等连接中的每一个主机既是客户又同时是服务器。例如主机 C 请求 D 的服务时，C 是客户，D 是服务器。但如果 C 又同时向 F 提供服务，那么 C 又同时起着服务器的作用。</p><h3 id="2-因特网的核心部分"><a class="markdownIt-Anchor" href="#2-因特网的核心部分"></a> 2 因特网的核心部分</h3><p>网络核心部分是因特网中最复杂的部分，网络中的核心部分要向网络边缘中的大量主机提供连通性，使边缘部分中的任何一个主机都能够向其他主机通信（即传送或接收各种形式的数据）。</p><p>在网络核心部分起特殊作用的是路由器(router)。路由器是实现分组交换(packet switching)的关键构件，其任务是转发收到的分组，这是网络核心部分最重要的功能。</p><p><strong>数据交换方式</strong></p><p><strong>(一) 电路交换(Circuit Switching)</strong></p><p>最主要的应用就是电话网络，电路交换必定是面向连接的；电路交换适合于数据量很大的实时性传输；核心路由器之间可以使用电路交换。</p><p>电路交换的三个阶段：</p><ol><li>建立连接（申请占用通信资源）</li><li>通信（一直占用通信资源）</li><li>释放连接（释放通信资源）</li></ol><p>为什么不能用电路交换方式传输计算机的数据？</p><p>计算机数据具有突发性，这导致通信线路的利用率很低。</p><p><strong>(二) 报文交换(Message Switching)</strong></p><p>在 20 世纪 40 年代，电报通信也采用了基于存储转发原理的报文交换(message switching)。 报文交换的时延较长，从几分钟到几小时不等。现在报文交换已经很少有人使用了。</p><p>报文交换的特点：</p><ul><li>报文一般比分组长的多</li><li>报文交换的时延较长</li></ul><p><strong>(三) 分组交换(Packet Switching)</strong></p><p><strong>分组交换的过程</strong>：</p><ol><li>在发送端，先把较长的报文划分成较短的、固定长度的数据段。</li><li>每一个数据段前面添加上首部构成分组。</li><li>分组交换网以“分组”作为数据传输单元，依次把各分组发送到接收端。</li><li>接收端收到分组后剥去首部还原成报文。</li><li>最后，在接收端把收到的数据恢复成为原来的报文。</li></ol><p><strong>分组首部的重要性</strong></p><ul><li>每一个分组的首部都含有地址等控制信息。</li><li>分组交换网中的结点交换机根据收到的分组的首部中的地址信息，把分组转发到下一个结点交换机。</li><li>用这样的存储转发方式，最后分组就能到达最终目的地。</li></ul><p><strong>路由器的存储转发</strong></p><p>在路由器中的输入和输出端口之间没有直接连线，路由器处理分组的过程是：</p><ol><li>把收到的分组先放入缓存（暂时存储）；</li><li>查找转发表，找出到某个目的地址应从哪个端口转发；</li><li>把分组送到适当的端口转发出去。</li></ol><p><a href="/pic/network/1-6.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/pic/network/1-6.png" class="lazyload"></a></p><p><strong>主机和路由器的作用不同</strong></p><ul><li>主机是为用户进行信息处理的，并向网络发送分组，从网络接收分组。</li><li>路由器对分组进行存储转发，最后把分组交付目的主机。</li></ul><p>分组交换的优点</p><ul><li><strong>高效</strong>：动态分配传输带宽，对通信链路是逐段占用。</li><li><strong>灵活</strong>：以分组为传送单位和查找路由。</li><li><strong>迅速</strong>：不必先建立连接就能向其他主机发送分组。</li><li><strong>可靠</strong>：保证可靠性的网络协议；分布式的路由选择协议使网络有很好的生存性。</li></ul><p>分组交换的缺点</p><ul><li><strong>时延</strong>：分组在各结点存储转发时需要排队，这就会造成一定的时延。</li><li><strong>开销</strong>：分组必须携带的首部（里面有必不可少的控制信息）也造成了一定的开销。</li></ul><p><strong>三种交换方式的比较</strong></p><p><a href="/pic/network/1-7.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/pic/network/1-7.png" class="lazyload"></a></p><p><strong>总结</strong>：</p><ul><li>因特网的核心部分是由许多网络和把它们互连起来的路由器组成，而主机处在因特网的边缘部分。</li><li>在因特网核心部分的路由器之间一般都用高速链路相连接，而在网络边缘的主机接入到核心部分则通常以相对较低速率的链路相连接。</li><li>主机的用途是为用户进行信息处理的，并且可以和其他主机通过网络交换信息。路由器的用途则是用来转发分组的，即进行分组交换的。</li></ul><p><strong>计算机网络的发展</strong></p><p><a href="/pic/network/1-8.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/pic/network/1-8.png" class="lazyload"></a></p><ul><li>早期的面向终端的计算机网络是以单个主机为中心的星形网，各终端通过通信线路共享昂贵的中心主机的硬件和软件资源。</li><li>分组交换网则是以网络为中心，主机都处在网络的外围，用户通过分组交换网可共享连接在网络上的许多硬件和各种丰富的软件资源。</li></ul><p>新型网络的特点：</p><ul><li>网络用于计算机之间的数据传送，而不是为了打电话。</li><li>网络能够连接不同类型的计算机，不局限于单一类型的计算机。</li><li>所有的网络结点都同等重要，因而大大提高网络的生存性。</li><li>计算机在进行通信时，必须有冗余的路由。</li><li>网络的结构应当尽可能地简单，同时还能够非常可靠地传送数据。</li></ul><h2 id="计算机网络的分类"><a class="markdownIt-Anchor" href="#计算机网络的分类"></a> 计算机网络的分类</h2><p>从不同维度上可以对网络进行不同的划分：</p><ul><li>按照作用范围：广域网、城域网、局域网、个人区域网；</li><li>按照使用者：公用网、专用网；</li><li>按照拓扑结构：总线型、环型、星型、树型、网状；</li><li>按照交换方式：电路交换网、报文交换网、分组交换网；</li><li>按照工作方式：资源子网、通信子网、接入网；</li></ul><h2 id="计算机网络的性能"><a class="markdownIt-Anchor" href="#计算机网络的性能"></a> 计算机网络的性能</h2><p><strong>1. 速率</strong></p><p>速率即数据率(data rate)或比特率(bit rate)是计算机网络中最重要的一个性能指标。指连接在计算机网络上的主机在数字信道上传送数据位数的速率。单位是 b/s、kb/s、Mb/s、Gb/s 等，速率往往是指额定速率或标称速率。</p><p><strong>比特</strong>（bit）是计算机中数据量的单位，也是信息论中使用的信息量的单位。Bit 来源于 binary digit，意思是一个“二进制数字”，因此一个比特就是二进制数字中的一个 1 或 0。</p><p><strong>2. 带宽</strong></p><p>带宽是数据通信领域中，数字信道所传送的最高数据率。单位是 b/s、kb/s、Mb/s、Gb/s 等。</p><p><strong>3. 吞吐量</strong></p><p>吞吐量(throughput)表示在单位时间内通过某个网络（或信道、接口）的数据量。</p><p>吞吐量更经常地用于对现实世界中的网络的一种测量，以便知道实际上到底有多少数据量能够通过网络；吞吐量受网络的带宽或网络的额定速率的限制。</p><p><strong>4. 时延</strong></p><p><strong>传输时延</strong>（发送时延）：发送数据时，数据块从结点进入到传输媒体所需要的时间。</p><p>也就是从发送数据帧的第一个比特算起，到该帧的最后一个比特发送完毕所需的时间。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">发</mi><mi mathvariant="normal">送</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">数</mi><mi mathvariant="normal">据</mi><mi mathvariant="normal">块</mi><mi mathvariant="normal">长</mi><mi mathvariant="normal">度</mi><mi mathvariant="normal">（</mi><mi mathvariant="normal">比</mi><mi mathvariant="normal">特</mi><mi mathvariant="normal">）</mi></mrow><mrow><mi mathvariant="normal">信</mi><mi mathvariant="normal">道</mi><mi mathvariant="normal">带</mi><mi mathvariant="normal">宽</mi><mi mathvariant="normal">（</mi><mi mathvariant="normal">比</mi><mi mathvariant="normal">特</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">秒</mi><mi mathvariant="normal">）</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">发送时延 = \frac{数据块长度（比特）}{信道带宽（比特/秒）}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.613em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord">/</span><span class="mord cjk_fallback">秒</span><span class="mord cjk_fallback">）</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">）</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><strong>传播时延</strong>：电磁波在信道中需要传播一定的距离而花费的时间。</p><p>信号传输速率（即发送速率）和信号在信道上的传播速率是完全不同的概念。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">传</mi><mi mathvariant="normal">播</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">信</mi><mi mathvariant="normal">道</mi><mi mathvariant="normal">长</mi><mi mathvariant="normal">度</mi><mi mathvariant="normal">（</mi><mi mathvariant="normal">米</mi><mi mathvariant="normal">）</mi></mrow><mrow><mi mathvariant="normal">信</mi><mi mathvariant="normal">号</mi><mi mathvariant="normal">在</mi><mi mathvariant="normal">信</mi><mi mathvariant="normal">道</mi><mi mathvariant="normal">上</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">传</mi><mi mathvariant="normal">播</mi><mi mathvariant="normal">速</mi><mi mathvariant="normal">率</mi><mi mathvariant="normal">（</mi><mi mathvariant="normal">米</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">秒</mi><mi mathvariant="normal">）</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">传播时延 = \frac{信道长度（米）}{信号在信道上的传播速率（米/秒）}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">播</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.613em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">号</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">播</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">率</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">米</span><span class="mord">/</span><span class="mord cjk_fallback">秒</span><span class="mord cjk_fallback">）</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">米</span><span class="mord cjk_fallback">）</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><strong>处理时延</strong>：交换结点为存储转发而进行一些必要的处理所花费的时间。</p><p><strong>排队时延</strong>：结点缓存队列中分组排队所经历的时延，排队时延的长短往往取决于网络中当时的通信量。</p><p>数据经历的总时延就是发送时延、传播时延、处理时延和排队时延之和：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">总</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>=</mo><mi mathvariant="normal">发</mi><mi mathvariant="normal">送</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>+</mo><mi mathvariant="normal">传</mi><mi mathvariant="normal">播</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>+</mo><mi mathvariant="normal">处</mi><mi mathvariant="normal">理</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>+</mo><mi mathvariant="normal">处</mi><mi mathvariant="normal">理</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi></mrow><annotation encoding="application/x-tex">总时延 = 发送时延+传播时延+处理时延+处理时延</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">总</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">播</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">处</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">处</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span></span></span></span></span></p><p><a href="/pic/network/1-9.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/pic/network/1-9.png" class="lazyload"></a></p><p>注意：</p><ul><li>对于高速网络链路，我们提高的仅仅是数据的发送速率而不是比特在链路上的传播速率。</li><li>提高链路带宽减小了数据的发送时延。</li></ul><p><strong>5. 时延带宽积</strong></p><p>链路的时延带宽积又称为以比特为单位的链路长度，表示在特定时间该网络上的最大数据量——已发送但尚未确认的数据。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mi mathvariant="normal">带</mi><mi mathvariant="normal">宽</mi><mi mathvariant="normal">积</mi><mo>=</mo><mi mathvariant="normal">传</mi><mi mathvariant="normal">播</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>×</mo><mi mathvariant="normal">带</mi><mi mathvariant="normal">宽</mi></mrow><annotation encoding="application/x-tex">时延带宽积 = 传播时延 \times 带宽</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span><span class="mord cjk_fallback">积</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">播</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span></span></span></span></span></p><p><strong>6. 往返时间</strong></p><p>往返时间RTT（Round-Trip Time）表示从发送方发送数据开始，到发送方收到接收方确认的时间间隔。（Ping命令的时间）</p><p><strong>7. 利用率</strong></p><ul><li>信道利用率：指出某信道有百分之几的时间是被利用的（有数据通过）。完全空闲的信道的利用率是零。信道利用率并非越高越好。</li><li>网络利用率：是全网络的信道利用率的加权平均值。</li></ul><p>时延与网络利用率的关系：</p><p>根据排队论的理论，当某信道的利用率增大时，该信道引起的时延也就迅速增加。</p><p>若令 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示网络空闲时的时延，<em>D</em> 表示网络当前的时延，则在适当的假定条件下，可以用下面的简单公式表示 <em>D</em> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>之间的关系：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>=</mo><mfrac><msub><mi>D</mi><mn>0</mn></msub><mrow><mn>1</mn><mo>−</mo><mi>U</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">D=\frac{D_0}{1-U}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>U 是网络的利用率，数值在 0 到 1 之间。</p><p><a href="/pic/network/1-10.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/pic/network/1-10.png" class="lazyload"></a></p><h2 id="计算机网络的体系结构"><a class="markdownIt-Anchor" href="#计算机网络的体系结构"></a> 计算机网络的体系结构</h2><p>计算机网络的<strong>体系结构</strong>(architecture)是计算机网络的各层及其协议的集合。 体系结构就是这个计算机网络及其部件所应完成的功能的<strong>精确定义</strong>。<strong>实现</strong>(implementation)是遵循这种体系结构的前提下用何种硬件或软件完成这些功能的问题。体系结构是抽象的，而实现则是具体的，是真正在运行的计算机硬件和软件。</p><p><strong>计算机网络分层的好处</strong>：各层之间是独立的；灵活性好；结构上可分割开；易于实现和维护；能促进标准化工作。</p><p>层数多少要适当：若层数太少，就会使每一层的协议太复杂；层数太多又会在描述和综合各层功能的系统工程任务时遇到较多的困难。</p><p><a href="/pic/network/1-11.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/pic/network/1-11.png" class="lazyload"></a></p><h3 id="osi-参考模型"><a class="markdownIt-Anchor" href="#osi-参考模型"></a> OSI 参考模型</h3><ul><li><strong>应用层</strong>：能够产生网络流量，能够和用户交互的应用程序。</li><li><strong>表示层</strong>：在数据传输之前进行的加密、压缩等处理。</li><li><strong>会话层</strong>：服务器和客户端建立的会话连接（可以通过 netstat -n 查看会话）。</li><li><strong>传输层</strong>：可以进行可靠传输、不可靠传输以及流量传输。</li><li><strong>网络层</strong>：负责选择最佳路径，进行IP地址编址（ ipv4和ipv6变化只会影响网络层 ）。</li><li><strong>数据链路层</strong>：负责数据的封装，帧的开始和结束、透明传输、差错校验（纠错由传输层解决）</li><li><strong>物理层</strong>：定义网络设备接口标准，电气标准(电压)，如何在物理链路上传输的更快。</li></ul><p>OSI参考模型对网络排错的意义：</p><p>每一层都为上一层提供服务，一旦某一层崩了，上面所有层都崩了，所以排查问题从最上层（物理层）排查。</p><ol><li>物理层故障怎么办？查看链接状态，发送和接收的数据包数值；</li><li>数据链路层故障怎么办？Mac地址冲突，2个一样的Mac地址同时访问；ADSL(非对称数字用户线路)欠费；两端的接口网速没有协商一致；计算机连接到其它VLAN(虚拟互联网)中；</li><li>网络层故障怎么办？配置错误的IP地址，子网掩码，网关；数据有没有通过各个网关到达指定位置；</li><li>应用层(合并3层)故障怎么办？应用程序配置问题；</li></ol><p>OSI参考模型和网络安全解决办法：</p><ol><li>物理层安全隐患？别人能私自接入你的网络，应该拔掉不用的网线或接口；</li><li>数据链路层安全隐患？ADSL账号密码，VLAN，交换机端口绑定Mac地址；</li><li>网络层安全隐患？路由器上使用ACL(访问控制列表)控制数据包流量；防火墙设置；</li><li>应用层安全隐患？应用程序有没有漏洞；</li></ol><p>开发系统信息交换涉及到的概念：</p><ul><li>实体：交换信息的硬件或软件进程；</li><li>协议：控制两个对等实体通信的规则；</li><li>服务：下层向上层提供服务，上层需要使用下层提供的服务来实现本层的功能；</li><li>服务访问点SAP：相邻两层实体间交换信息的地方；</li></ul><p><a href="/pic/network/1-12.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/pic/network/1-12.png" class="lazyload"></a></p><p>需要注意的是：</p><ol><li>本层的服务用户只能看见服务而无法看见下面的协议。</li><li>下面的协议对上面的服务用户是透明的。</li><li>协议是“水平的”，即协议是控制对等实体之间通信的规则。</li><li>服务是“垂直的”，即服务是由下层向上层通过层间接口提供的。</li></ol><p><strong>数据的传输过程</strong></p><p><a href="/pic/network/1-13.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="/pic/network/1-13.png" class="lazyload"></a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
